{"version":3,"sources":["componets/CustomBreadcrumb/index.js","views/PublicView/style.js","views/PublicView/Button.js"],"names":["CustomBreadcrumb","style","marginBottom","Item","to","this","props","arr","map","res","key","path","title","PureComponent","styled","div","BaseStyle","ButtonView","state","loadings","enterLoading","index","setState","newLoadings","setTimeout","className","gutter","span","type","danger","loading","size","icon","onClick","shape","Group","Button","value","disabled","block","Component"],"mappings":"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","file":"static/js/button.0181e50b.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Breadcrumb } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class CustomBreadcrumb extends PureComponent {\r\n    render() {\r\n        return (\r\n            <Breadcrumb style={{ marginBottom: 16 }}>\r\n                <Breadcrumb.Item>\r\n                    <Link to='/index'>首页</Link>\r\n                </Breadcrumb.Item>\r\n                {\r\n                    this.props.arr.map(res => {\r\n                        if (typeof res === 'object') {\r\n                            return <Breadcrumb.Item key={res.path}><Link to={res.path}>{res.title}</Link></Breadcrumb.Item>\r\n                        } else {\r\n                            return <Breadcrumb.Item key={res}>{res}</Breadcrumb.Item>\r\n                        }\r\n                    })\r\n                }\r\n            </Breadcrumb>\r\n        )\r\n    }\r\n}\r\n\r\nCustomBreadcrumb.propTypes = {\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nexport default CustomBreadcrumb\r\n","import styled from 'styled-components'\r\n\r\nexport const Warpper = styled.div`\r\n    padding: 15px 0;\r\n    .index-header {\r\n        color: #fff;\r\n        .item {\r\n            display: flex;\r\n        }\r\n    }\r\n`\r\n\r\nexport const BaseStyle = styled.div`\r\n    background-color: #ffffff;\r\n    margin-bottom: 10px;\r\n    padding: 15px;\r\n    border-radius: 5px;\r\n    box-shadow: 0 2px 13px 0 hsla(0,0%,89.4%,.6);\r\n    h3 {\r\n        font-size: 20px;\r\n    }\r\n    .ant-btn, .ant-radio-group {\r\n        margin-right: 8px;\r\n        margin-bottom: 12px;\r\n    }\r\n    .icons-list {\r\n        margin: 0;\r\n        padding: 0;\r\n        &::after{\r\n            content: \"\";\r\n            display: block;\r\n            clear: both;\r\n        }\r\n        li {\r\n            position: relative;\r\n            float: left;\r\n            width: 10%;\r\n            height: 60px;\r\n            line-height: 60px;\r\n            color: rgb(85, 85, 85);\r\n            text-align: center;\r\n            background-color: rgb(255, 255, 255);\r\n            font-size: 28px;\r\n            cursor: pointer;\r\n            overflow: hidden;\r\n            list-style: none;\r\n            border-radius: 4px;\r\n            &:hover {\r\n                background-color: rgb(204, 204, 204);\r\n            }\r\n        }\r\n    }\r\n`","import React, { Component } from 'react'\r\nimport { Row, Col, Divider, Button, Tooltip, Radio } from 'antd'\r\nimport CustomBreadcrumb from '../../componets/CustomBreadcrumb'\r\nimport { BaseStyle } from './style'\r\nimport {\r\n    SearchOutlined,\r\n    PoweroffOutlined,\r\n    LeftOutlined,\r\n    RightOutlined\r\n} from '@ant-design/icons';\r\n\r\nexport class ButtonView extends Component {\r\n    state = {\r\n        loadings: [],\r\n    };\r\n\r\n    enterLoading = index => {\r\n        this.setState(({ loadings }) => {\r\n            const newLoadings = [...loadings];\r\n            newLoadings[index] = true;\r\n\r\n            return {\r\n                loadings: newLoadings,\r\n            };\r\n        });\r\n        setTimeout(() => {\r\n            this.setState(({ loadings }) => {\r\n                const newLoadings = [...loadings];\r\n                newLoadings[index] = false;\r\n\r\n                return {\r\n                    loadings: newLoadings,\r\n                };\r\n            });\r\n        }, 6000);\r\n    };\r\n\r\n    render() {\r\n        const { loadings } = this.state;\r\n        return (\r\n            <div className=\"animate__animated animate__fadeIn\">\r\n                <CustomBreadcrumb arr={[\"通用\", \"按钮\"]} />\r\n                <BaseStyle>\r\n                    <h3>何时使用</h3>\r\n                    <Divider />\r\n                    <p>标记了一个（或封装一组）操作命令，响应用户点击行为，触发相应的业务逻辑。</p>\r\n                </BaseStyle>\r\n                <Row gutter={8}>\r\n                    <Col span={12}>\r\n                        <BaseStyle>\r\n                            <Button type=\"primary\">Primary</Button>\r\n                            <Button>Default</Button>\r\n                            <Button type=\"dashed\">Dashed</Button>\r\n                            <Button type=\"primary\" danger>danger</Button>\r\n                            <Button type=\"link\">Link Button</Button>\r\n                        </BaseStyle>\r\n                        <BaseStyle>\r\n                            <Button type=\"primary\" loading>\r\n                                Loading\r\n                            </Button>\r\n                            <Button type=\"primary\" size=\"small\" icon={<PoweroffOutlined />} loading>\r\n                                Loading\r\n                            </Button>\r\n                            <Button type=\"primary\" loading={loadings[0]} onClick={() => this.enterLoading(0)}>\r\n                                Click me!\r\n                            </Button>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                icon={<PoweroffOutlined />}\r\n                                loading={loadings[1]}\r\n                                onClick={() => this.enterLoading(1)}\r\n                            >\r\n                                Click me!\r\n                            </Button>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                icon={<PoweroffOutlined />}\r\n                                loading\r\n                            />\r\n                            <Button\r\n                                type=\"primary\"\r\n                                shape=\"circle\"\r\n                                icon={<PoweroffOutlined />}\r\n                                loading\r\n                            />\r\n                            <Button\r\n                                type=\"primary\"\r\n                                danger\r\n                                shape=\"round\"\r\n                                icon={<PoweroffOutlined />}\r\n                                loading\r\n                            />\r\n                        </BaseStyle>\r\n                        <BaseStyle>\r\n                            <Radio.Group>\r\n                                <Radio.Button value=\"large\">Large</Radio.Button>\r\n                                <Radio.Button value=\"default\">Default</Radio.Button>\r\n                                <Radio.Button value=\"small\">Small</Radio.Button>\r\n                            </Radio.Group>\r\n                            <Radio.Group disabled>\r\n                                <Radio.Button value=\"large\">L</Radio.Button>\r\n                                <Radio.Button value=\"default\">M</Radio.Button>\r\n                                <Radio.Button value=\"small\">R</Radio.Button>\r\n                            </Radio.Group>\r\n                            <Radio.Group>\r\n                                <Radio.Button value=\"large\"><LeftOutlined /> Go back</Radio.Button>\r\n                                <Radio.Button value=\"small\">Go forward <RightOutlined /></Radio.Button>\r\n                            </Radio.Group>\r\n                            <Radio.Group size=\"small\">\r\n                                <Radio.Button value=\"large\"><LeftOutlined /></Radio.Button>\r\n                                <Radio.Button value=\"small\"><RightOutlined /></Radio.Button>\r\n                            </Radio.Group>\r\n                        </BaseStyle>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <BaseStyle>\r\n                            <Tooltip title=\"search\">\r\n                                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Tooltip>\r\n                            <Button type=\"primary\" shape=\"circle\">A</Button>\r\n                            <Button type=\"primary\" icon={<SearchOutlined />}>Search</Button>\r\n                            <Tooltip title=\"search\">\r\n                                <Button shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Tooltip>\r\n                            <Button icon={<SearchOutlined />}>Search</Button>\r\n                            <Tooltip title=\"search\">\r\n                                <Button type=\"dashed\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Tooltip>\r\n                            <Button type=\"dashed\" icon={<SearchOutlined />}>\r\n                                Search\r\n                            </Button>\r\n                        </BaseStyle>\r\n                        <BaseStyle>\r\n                            <Button type=\"primary\">Primary</Button>\r\n                            <Button type=\"primary\" disabled>\r\n                                Primary(disabled)\r\n                            </Button>\r\n                            <Button>Default</Button>\r\n                            <Button disabled>Default(disabled)</Button>\r\n                            <Button type=\"dashed\">Dashed</Button>\r\n                            <Button type=\"dashed\" disabled>\r\n                                Dashed(disabled)\r\n                            </Button>\r\n                        </BaseStyle>\r\n                        <BaseStyle>\r\n                            <Button type=\"primary\" block>\r\n                                Primary\r\n                            </Button>\r\n                            <Button block>Default</Button>\r\n                            <Button type=\"dashed\" block>\r\n                                Dashed\r\n                            </Button>\r\n                            <Button type=\"link\" block>\r\n                                Link\r\n                            </Button>\r\n                        </BaseStyle>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ButtonView\r\n"],"sourceRoot":""}