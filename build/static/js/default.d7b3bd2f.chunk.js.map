{"version":3,"sources":["routes/index.js","layout/AppAside.js","layout/AppHeader.js","utils/index.js","store/actionCreators.js","layout/DefaultLayout.js"],"names":["Index","Loadable","ButtonView","IconView","DropdownView","MenuView","StepView","routes","title","key","icon","HomeOutlined","component","AppstoreOutlined","children","PartitionOutlined","Sider","SubMenu","AppAside","state","openKeys","selectedKeys","getOpenKeys","string","newStr","newArr","arr","split","map","i","length","push","onOpenChange","latestOpenKey","includes","setState","Iicon","Item","to","child","renderMenuItem","pathname","this","props","location","prevProps","prevState","menu","menuToggle","className","collapsed","GithubOutlined","style","color","fontSize","mode","theme","onClick","item","renderChildrenbMenu","Component","withRouter","Header","AppHeader","menuClick","MenuUnfoldOutlined","MenuFoldOutlined","avatar","loginOut","ItemGroup","Divider","EditOutlined","SettingOutlined","LogoutOutlined","getIcon","rel","href","target","dot","BellOutlined","overlay","size","src","cursor","sNodes","l","setting","set","idKey","pIdKey","label","parentKey","childKey","Array","isArray","r","tmpMap","menuToggleAction","arg","type","MENU_TOGGLE","data","Footer","Content","DefaultLayout","confirm","cancelText","okText","onOk","localStorage","clear","history","message","success","getItem","JSON","parse","routesHash","getRoutesHash","getMenu","getRoutes","array","forEach","hasMenu","name","path","Utils","newMenu","hasRoutes","isLogin","minHeight","marginLeft","connect","dispatch"],"mappings":"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","file":"static/js/default.d7b3bd2f.chunk.js","sourcesContent":["import {\r\n    HomeOutlined,\r\n    AppstoreOutlined,\r\n    PartitionOutlined,\r\n    // FormOutlined,\r\n    // FundViewOutlined,\r\n    // MenuOutlined,\r\n    // GatewayOutlined,\r\n    // UserOutlined\r\n} from '@ant-design/icons';\r\nimport Loadable from '../utils/loadable'\r\n\r\n// 首页\r\nconst Index = Loadable(() => import(/* webpackChunkName: 'index' */ '../views/Index/Index'))\r\n\r\n// 通用\r\nconst ButtonView = Loadable(() => import(/* webpackChunkName: 'button' */ '../views/PublicView/Button'))\r\nconst IconView = Loadable(() => import(/* webpackChunkName: 'icon' */ '../views/PublicView/Icon'))\r\n\r\n// 导航\r\nconst DropdownView = Loadable(() => import(/* webpackChunkName: 'dropdown' */ '../views/NavView/Dropdown'))\r\nconst MenuView = Loadable(() => import(/* webpackChunkName: 'menu' */ '../views/NavView/Menu'))\r\nconst StepView = Loadable(() => import(/* webpackChunkName: 'step' */ '../views/NavView/Step'))\r\n\r\nconst routes = [\r\n    {\r\n        title: '首页',\r\n        key: '/index',\r\n        icon: HomeOutlined,\r\n        // auth: [1],\r\n        component: Index\r\n    },\r\n    {\r\n        title: '通用',\r\n        key: '/public',\r\n        icon: AppstoreOutlined,\r\n        // auth: [1],\r\n        children: [\r\n            {\r\n                title: '按钮',\r\n                key: '/public/button',\r\n                icon: '',\r\n                component: ButtonView\r\n            },\r\n            {\r\n                title: '图标',\r\n                key: '/public/icon',\r\n                icon: '',\r\n                component: IconView\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: '导航',\r\n        key: '/nav',\r\n        icon: PartitionOutlined,\r\n        children: [\r\n            { title: '下拉菜单', key: '/nav/dropdown', icon: '', component: DropdownView },\r\n            { title: '导航菜单', key: '/nav/menu', icon: '', component: MenuView },\r\n            { title: '步骤条', key: '/nav/steps', icon: '', component: StepView }\r\n        ]\r\n    },\r\n    // {\r\n    //     title: '表单',\r\n    //     key: '/form',\r\n    //     icon: FormOutlined,\r\n    //     children: [\r\n    //         { title: '基础表单', key: '/form/base-form', icon: '' },\r\n    //         { title: '步骤表单', key: '/form/step-form', icon: '' }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     title: '展示',\r\n    //     key: '/show',\r\n    //     icon: FundViewOutlined,\r\n    //     children: [\r\n    //         { title: '表格', key: '/show/table', icon: '' },\r\n    //         { title: '折叠面板', key: '/show/collapse', icon: '' },\r\n    //         { title: '树形控件', key: '/show/tree', icon: '' },\r\n    //         { title: '标签页', key: '/show/tabs', icon: '' }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     title: '其它',\r\n    //     key: '/others',\r\n    //     icon: MenuOutlined,\r\n    //     auth: [1],\r\n    //     children: [\r\n    //         { title: '进度条', key: '/others/progress', icon: '' },\r\n    //         { title: '动画', key: '/others/animation', icon: '' },\r\n    //         { title: '上传', key: '/others/upload', icon: '' },\r\n    //         { title: '富文本', key: '/others/editor', icon: '' },\r\n    //         { title: '404', key: '/404', icon: '' },\r\n    //         { title: '500', key: '/500', icon: '' }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     title: '多级导航',\r\n    //     key: '/one',\r\n    //     icon: GatewayOutlined,\r\n    //     children: [\r\n    //         {\r\n    //             title: '二级',\r\n    //             key: '/one/two',\r\n    //             icon: '',\r\n    //             children: [{ title: '三级', key: '/one/two/three', icon: '' }]\r\n    //         }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     title: '关于',\r\n    //     key: '/about',\r\n    //     icon: UserOutlined,\r\n    //     auth: [1]\r\n    // }\r\n]\r\n\r\nexport default routes","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { Menu, Layout } from 'antd';\r\nimport {\r\n    GithubOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Sider } = Layout\r\nconst { SubMenu } = Menu;\r\n\r\nexport class AppAside extends Component {\r\n    state = {\r\n        openKeys: [],\r\n        selectedKeys: []\r\n    }\r\n    renderMenuItem({ key, icon: Iicon, title }) {\r\n        return (\r\n            <Menu.Item key={key}>\r\n                <Link to={key}>\r\n                    {Iicon && <Iicon />}\r\n                    <span>{title}</span>\r\n                </Link>\r\n            </Menu.Item>\r\n        )\r\n    }\r\n    renderChildrenbMenu({ key, icon: Iicon, title, children }) {\r\n        return (\r\n            <SubMenu key={key} icon={<Iicon />} title={title}>\r\n                {\r\n                    children.map(child => (\r\n                        this.renderMenuItem(child)\r\n                    ))\r\n                }\r\n            </SubMenu>\r\n        )\r\n    }\r\n    getOpenKeys = string => {\r\n        let newStr = '',\r\n            newArr = [],\r\n            arr = string.split('/').map(i => '/' + i)\r\n        for (let i = 1; i < arr.length - 1; i++) {\r\n            newStr += arr[i]\r\n            newArr.push(newStr)\r\n        }\r\n        return newArr\r\n    }\r\n    onOpenChange = openKeys => {\r\n        if (openKeys.length === 0 || openKeys.length === 1) {\r\n            this.setState({\r\n                openKeys\r\n            })\r\n            return;\r\n        }\r\n        const latestOpenKey = openKeys[openKeys.length - 1]\r\n        if (latestOpenKey.includes(openKeys[0])) {\r\n            this.setState({\r\n                openKeys\r\n            })\r\n        } else {\r\n            this.setState({\r\n                openKeys: [latestOpenKey]\r\n            })\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let { pathname } = this.props.location\r\n        this.setState({\r\n            selectedKeys: [pathname],\r\n            openKeys: this.getOpenKeys(pathname)\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let { pathname } = this.props.location\r\n        if (prevProps.location.pathname !== pathname) {\r\n            this.setState({\r\n                selectedKeys: [pathname],\r\n                openKeys: this.getOpenKeys(pathname)\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { openKeys, selectedKeys } = this.state\r\n        const { menu, menuToggle } = this.props;\r\n        return (\r\n            <Sider className='aside' collapsed={menuToggle}>\r\n                <div className='logo'>\r\n                    <GithubOutlined style={{ color: '#fff', fontSize: '38px' }} />\r\n                </div>\r\n                <Menu\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                    selectedKeys={selectedKeys}\r\n                    openKeys={openKeys}\r\n                    onClick={({ key }) => { this.setState({selectedKeys: [key]}) }}\r\n                    onOpenChange={this.onOpenChange}\r\n                >\r\n                    {\r\n                        menu.map(item => {\r\n                            return item.children && item.children.length > 0 ? this.renderChildrenbMenu(item) : this.renderMenuItem(item)\r\n                        })\r\n                    }\r\n                </Menu>\r\n            </Sider>\r\n        )\r\n    }\r\n}\r\n\r\nAppAside.propTypes = {\r\n    menu: PropTypes.array,\r\n    menuToggle: PropTypes.bool\r\n};\r\n\r\nexport default withRouter(AppAside)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Layout, Badge, Menu, Dropdown, Avatar } from 'antd';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    GithubOutlined,\r\n    BellOutlined,\r\n    EditOutlined,\r\n    SettingOutlined,\r\n    LogoutOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header } = Layout\r\n\r\nexport class AppHeader extends Component {\r\n    getIcon(menuToggle, menuClick) {\r\n        return menuToggle ? <MenuUnfoldOutlined onClick={menuClick} style={{ fontSize: '20px' }} /> : <MenuFoldOutlined onClick={menuClick} style={{ fontSize: '20px' }} />;\r\n    }\r\n    render() {\r\n        let { menuClick, avatar, menuToggle, loginOut } = this.props\r\n        const menu = (\r\n            <Menu>\r\n                <Menu.ItemGroup title=\"用户设置\">\r\n                    <Menu.Divider />\r\n                    <Menu.Item><EditOutlined /> 个人设置</Menu.Item>\r\n                    <Menu.Item><SettingOutlined /> 系统设置</Menu.Item>\r\n                </Menu.ItemGroup>\r\n                <Menu.Divider />\r\n                <Menu.Item onClick={loginOut}><LogoutOutlined /> 退出登录</Menu.Item>\r\n            </Menu>\r\n        );\r\n        return (\r\n            <Header className=\"header\">\r\n                <div className=\"left\">\r\n                    {this.getIcon(menuToggle, menuClick)}\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"mr15\">\r\n                        <a rel=\"noopener noreferrer\" href=\"https://github.com/lxx0904\" target=\"_blank\"><GithubOutlined style={{ color: '#000' }} /></a>\r\n                    </div>\r\n                    <div className=\"mr15\">\r\n                        <Badge dot>\r\n                            <a rel=\"noopener noreferrer\" href=\"https://github.com/lxx0904\" target=\"_blank\"><BellOutlined style={{ color: '#000' }} /></a>\r\n                        </Badge>\r\n                    </div>\r\n                    <div>\r\n                        <Dropdown overlay={menu}>\r\n                            <div className='ant-dropdown-link'><Avatar size={32} src={avatar} style={{ cursor: 'pointer' }} /></div>\r\n                        </Dropdown>\r\n                    </div>\r\n                </div>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\nAppHeader.propTypes = {\r\n    avatar: PropTypes.string,\r\n    loginOut: PropTypes.func,\r\n    menuToggle: PropTypes.bool,\r\n    menuClick: PropTypes.func\r\n};\r\n\r\nexport default AppHeader\r\n","const transformToTree = (sNodes, setting = {}) => {\r\n    let set = {\r\n        children: \"children\",\r\n        idKey: \"id\",\r\n        pIdKey: \"pId\",\r\n        label: 'name',\r\n        ...setting\r\n    };\r\n    let i, l,\r\n        key = set.idKey,\r\n        parentKey = set.pIdKey,\r\n        childKey = set.children;\r\n    if (!key || key === \"\" || !sNodes) return [];\r\n\r\n    if (Array.isArray(sNodes)) {\r\n        var r = [];\r\n        var tmpMap = [];\r\n        for (i = 0, l = sNodes.length; i < l; i++) {\r\n            tmpMap[sNodes[i][key]] = sNodes[i];\r\n        }\r\n        for (i = 0, l = sNodes.length; i < l; i++) {\r\n            if (tmpMap[sNodes[i][parentKey]]) {\r\n                if (!tmpMap[sNodes[i][parentKey]][childKey]) tmpMap[sNodes[i][parentKey]][childKey] = [];\r\n                tmpMap[sNodes[i][parentKey]][childKey].push(sNodes[i]);\r\n            } else {\r\n                r.push(sNodes[i]);\r\n            }\r\n        }\r\n        return r;\r\n    } else {\r\n        return [sNodes];\r\n    }\r\n}\r\n\r\nexport default {\r\n    transformToTree\r\n}","import { MENU_TOGGLE } from './actionType'\r\n\r\nexport const menuToggleAction = (arg) => ({\r\n    type: MENU_TOGGLE,\r\n    data: arg\r\n})","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { Layout, Modal, message, BackTop } from 'antd';\r\nimport '../style/layout.scss'\r\nimport routes from '../routes/index'\r\n\r\nimport AppAside from './AppAside.js'\r\nimport AppHeader from './AppHeader.js'\r\nimport Utils from '../utils'\r\nimport { connect } from 'react-redux'\r\nimport { menuToggleAction } from '../store/actionCreators'\r\n\r\nconst { Footer, Content } = Layout;\r\n\r\nexport class DefaultLayout extends Component {\r\n    state = {\r\n        menu: [],\r\n        routes: [],\r\n        // menuToggle: false\r\n    }\r\n    isLogin() {\r\n        if (localStorage.getItem('user')) {\r\n            let menu = JSON.parse(localStorage.getItem('menu'));\r\n            this.routesHash = {};\r\n            this.getRoutesHash(routes);\r\n            this.setState({\r\n                menu: this.getMenu(menu),\r\n                routes: this.getRoutes(menu)\r\n            })\r\n        }\r\n    }\r\n    getRoutesHash(array) {\r\n        array.forEach(item => {\r\n            this.routesHash[item.key] = item;\r\n            if (Array.isArray(item.children)) {\r\n                this.getRoutesHash(item.children);\r\n            }\r\n        });\r\n    }\r\n    getMenu(menu) {\r\n        let newMenu = Utils.transformToTree(menu);\r\n        let hasMenu = menu => {\r\n            return menu.map(item => {\r\n                return {\r\n                    title: item.name,\r\n                    key: item.path,\r\n                    icon: this.routesHash[item.path].icon,\r\n                    children: item.children && item.children.length && hasMenu(item.children)\r\n                }\r\n            })\r\n        }\r\n        return hasMenu(newMenu);\r\n    }\r\n    getRoutes(menu) {\r\n        let newMenu = Utils.transformToTree(menu);\r\n        let r = [];\r\n        let hasRoutes = menu => {\r\n            menu.forEach(item => {\r\n                if (item.children && item.children.length) {\r\n                    hasRoutes(item.children);\r\n                } else {\r\n                    r.push({\r\n                        key: item.path,\r\n                        component: this.routesHash[item.path].component\r\n                    })\r\n                }\r\n            });\r\n        }\r\n        hasRoutes(newMenu);\r\n        return r;\r\n    }\r\n    loginOut = () => {\r\n        const { confirm } = Modal;\r\n        confirm({\r\n            title: '您确定要退出登录吗?',\r\n            cancelText: '取消',\r\n            okText: '确定',\r\n            onOk: () => {\r\n                localStorage.clear()\r\n                this.props.history.push('/login')\r\n                message.success('登出成功!')\r\n            }\r\n        });\r\n    }\r\n    // menuClick = () => {\r\n    //     this.setState({\r\n    //         menuToggle: !this.state.menuToggle\r\n    //     })\r\n    // }\r\n    UNSAFE_componentWillMount() {\r\n        this.isLogin()\r\n    }\r\n    render() {\r\n        if (!localStorage.getItem('user')) {\r\n            return <Redirect to=\"/login\" />\r\n        } else {\r\n            // menuToggle\r\n            const { menu, routes } = this.state;\r\n            const { menuToggle, menuClick } = this.props;\r\n            return (\r\n                <Layout className=\"app\" style={{ minHeight: '100%' }}>\r\n                    <BackTop />\r\n                    <AppAside menuToggle={menuToggle} menu={menu} />\r\n                    <Layout style={{ marginLeft: menuToggle ? '80px' : '200px' }}>\r\n                        <AppHeader avatar=\"http://img1.szhk.com/Image/2020/10/13/1602576197132.jpg\" loginOut={this.loginOut} menuToggle={menuToggle} menuClick={() => { menuClick(123456) }} />\r\n                        <Content className=\"content\">\r\n                            <Switch>\r\n                                {\r\n                                    routes.map(item => {\r\n                                        return <Route key={item.key} path={item.key} component={item.component} />\r\n                                    })\r\n                                }\r\n                                <Redirect to=\"/404\" />\r\n                            </Switch>\r\n                        </Content>\r\n                        <Footer className=\"footer\">React Admin ©2020 Created By lanxx</Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menuToggle: state.menuToggle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        menuClick: (...args) => dispatch(menuToggleAction(...args))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout)\r\n"],"sourceRoot":""}