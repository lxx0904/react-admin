{"version":3,"sources":["views/Login/Login.js"],"names":["FormItem","Item","index","state","loading","onFinish","values","setState","timer","setTimeout","localStorage","setItem","JSON","stringify","menu","username","id","pId","name","path","success","props","history","replace","open","message","description","duration","destroy","this","clearTimeout","className","rules","required","prefix","style","color","placeholder","type","htmlType","block","Component"],"mappings":"iWAOMA,G,OAAW,IAAKC,MAETC,EAAb,4MACIC,MAAQ,CACJC,SAAS,GAFjB,EAIKC,SAAW,SAACC,GACT,EAAKC,SAAS,CACVH,SAAS,IAgBb,EAAKI,MAAQC,YAAW,WACpBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUP,IAC5C,IAAIQ,EAAO,GACX,OAAQR,EAAOS,UACX,IAAK,QACDD,EAAO,CAAC,CAAEE,GAAI,EAAGC,IAAK,EAAGC,KAAM,eAAMC,KAAM,UAC3C,CAAEH,GAAI,EAAGC,IAAK,EAAGC,KAAM,eAAMC,KAAM,WACnC,CAAEH,GAAI,EAAGC,IAAK,EAAGC,KAAM,eAAMC,KAAM,kBACnC,CAAEH,GAAI,EAAGC,IAAK,EAAGC,KAAM,eAAMC,KAAM,gBACnC,CAAEH,GAAI,EAAGC,IAAK,EAAGC,KAAM,eAAMC,KAAM,QACnC,CAAEH,GAAI,EAAGC,IAAK,EAAGC,KAAM,2BAAQC,KAAM,iBACrC,CAAEH,GAAI,EAAGC,IAAK,EAAGC,KAAM,2BAAQC,KAAM,aACrC,CAAEH,GAAI,EAAGC,IAAK,EAAGC,KAAM,qBAAOC,KAAM,eACpCT,aAAaC,QAAQ,OAAQC,KAAKC,UAAUC,IAC5C,MACJ,QACIA,EAAO,CAAC,CAAEE,GAAI,EAAGC,IAAK,EAAGC,KAAM,eAAMC,KAAM,UAC3C,CAAEH,GAAI,EAAGC,IAAK,EAAGC,KAAM,eAAMC,KAAM,WACnC,CAAEH,GAAI,EAAGC,IAAK,EAAGC,KAAM,eAAMC,KAAM,kBACnC,CAAEH,GAAI,EAAGC,IAAK,EAAGC,KAAM,eAAMC,KAAM,iBACnCT,aAAaC,QAAQ,OAAQC,KAAKC,UAAUC,IAEpD,IAAQM,QAAQ,6BAChB,EAAKC,MAAMC,QAAQC,QAAQ,OAC5B,MA9CX,kEAiDQ,IAAaC,KAAK,CACdC,QAAS,+DACTC,YAAa,6FACbC,SAAU,MApDtB,6CAwDQ,IAAaC,UACTC,KAAKrB,OAAOsB,aAAaD,KAAKrB,SAzD1C,+BA4DQ,OACI,yBAAKuB,UAAU,SACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,SACX,oEACA,4BACA,uBACIb,KAAK,eACLb,SAAUwB,KAAKxB,UAEf,kBAACL,EAAD,CAAUkB,KAAK,WAAWc,MAAO,CAAC,CAAEC,UAAU,EAAMR,QAAS,2CACzD,uBAAOS,OAAQ,kBAAC,IAAD,CAAcC,MAAO,CAAEC,MAAO,qBAAyBC,YAAY,wBAEtF,kBAACrC,EAAD,CAAUkB,KAAK,WAAWc,MAAO,CAAC,CAAEC,UAAU,EAAMR,QAAS,qCACzD,uBACIS,OAAQ,kBAAC,IAAD,CAAcC,MAAO,CAAEC,MAAO,qBACtCE,KAAK,WACLD,YAAY,kBAGpB,kBAACrC,EAAD,KACI,uBAAQsC,KAAK,UAAUC,SAAS,SAASC,OAAK,EAACpC,QAASyB,KAAK1B,MAAMC,SAAnE,yBAjFhC,GAA2BqC,aA2FZvC","file":"static/js/login.ca660ad8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Input, Button, Divider, notification, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n// import API from '../../api'\r\n\r\nimport '../../style/login.scss'\r\n\r\nconst FormItem = Form.Item;\r\n\r\nexport class index extends Component {\r\n    state = {\r\n        loading: false\r\n    }\r\n     onFinish = (values) => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        // try {\r\n        //     const result = await API.post(\"/login.do\", {\r\n        //         username: 'admin',\r\n        //         password: \"\"\r\n        //     })\r\n        //     console.log(result)\r\n        // } catch (error) {\r\n        //     console.log(error)\r\n        // }\r\n        // .then(res => {\r\n        //     console.log(res)\r\n        // }).catch(err => {\r\n        //     console.log(err)\r\n        // })\r\n        this.timer = setTimeout(() => {\r\n            localStorage.setItem('user', JSON.stringify(values))\r\n            let menu = [];\r\n            switch (values.username) {\r\n                case 'admin':\r\n                    menu = [{ id: 1, pId: 0, name: \"首页\", path: \"/index\" },\r\n                    { id: 2, pId: 0, name: \"通用\", path: \"/public\" },\r\n                    { id: 3, pId: 2, name: \"按钮\", path: \"/public/button\" },\r\n                    { id: 4, pId: 2, name: \"图标\", path: \"/public/icon\" },\r\n                    { id: 5, pId: 0, name: \"导航\", path: \"/nav\" },\r\n                    { id: 6, pId: 5, name: \"下拉菜单\", path: \"/nav/dropdown\" },\r\n                    { id: 7, pId: 5, name: \"导航菜单\", path: \"/nav/menu\" },\r\n                    { id: 8, pId: 5, name: \"步骤条\", path: \"/nav/steps\" }];\r\n                    localStorage.setItem('menu', JSON.stringify(menu))\r\n                    break\r\n                default:\r\n                    menu = [{ id: 1, pId: 0, name: \"首页\", path: \"/index\" },\r\n                    { id: 2, pId: 0, name: \"通用\", path: \"/public\" },\r\n                    { id: 3, pId: 2, name: \"按钮\", path: \"/public/button\" },\r\n                    { id: 4, pId: 2, name: \"图标\", path: \"/public/icon\" }];\r\n                    localStorage.setItem('menu', JSON.stringify(menu))\r\n            }\r\n            message.success('登录成功!')\r\n            this.props.history.replace('/')\r\n        }, 2000)\r\n    };\r\n    componentDidMount() {\r\n        notification.open({\r\n            message: '欢迎使用后台管理平台',\r\n            description: '账号 admin(管理员) 其他(游客) 密码随意',\r\n            duration: 0\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        notification.destroy()\r\n        if (this.timer) clearTimeout(this.timer);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"wrap\">\r\n                    <div className=\"model\">\r\n                        <h3>后台管理系统</h3>\r\n                        <Divider />\r\n                        <Form\r\n                            name=\"normal_login\"\r\n                            onFinish={this.onFinish}\r\n                        >\r\n                            <FormItem name=\"username\" rules={[{ required: true, message: '请输入用户名!' }]}>\r\n                                <Input prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" />\r\n                            </FormItem>\r\n                            <FormItem name=\"password\" rules={[{ required: true, message: '请输入密码!' }]}>\r\n                                <Input\r\n                                    prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"密码\"\r\n                                />\r\n                            </FormItem>\r\n                            <FormItem>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block loading={this.state.loading}>登录</Button>\r\n                            </FormItem>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default index\r\n"],"sourceRoot":""}